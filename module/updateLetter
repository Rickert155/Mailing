#!/usr/bin/python3
# Скрипт для предобразования текста в шаблон
# Письма составляются в дропбоксе, и людей не убедить
# составлять их в нужно для рассылке формате. По этой
# причине создается этот скрипт
import json, os

template_json = 'letter.json'

#######################################
# Простые функции для обработки 
# входящих данных
#######################################
TEMPLATE_AGENCY = '[AGENCY NAME]'
TEMPLATE_NAME = '[NAME]'

def processingData(data:str):
    if TEMPLATE_AGENCY in data:data = data.replace(TEMPLATE_AGENCY, "{company}")
    if TEMPLATE_NAME in data:data = data.replace(TEMPLATE_NAME, "{name}")
    return data



def get_theme():
    theme = str(input("Theme: ")).strip()
    theme = processingData(data=theme)
    return theme

def get_body():
    body = str(input("Body: ")).strip()
    body = processingData(data=body)
    return body

#######################################
# Проверка наличия/Запись в JSON
#######################################
def CheckJson():
    if not os.path.exists(template_json):
        data = []
        with open(template_json, 'w') as file:
            json.dump(data, file, indent=4)
    
    else:
        divide_line = '='*40
        with open(template_json, 'r') as file:
            data = json.load(file)
        for info in data:
            id_info = info["id"]
            theme = info["theme"]
            body = info["body"]
            print(f"ID: {id_info}\nTheme: {theme}\nBody: {body}\n\n{divide_line}\n")
        if len(data) == 0:print(f'LIST TEMPLATE: VOID')
        
    return len(data)
        
def updateJson(id_current:int, theme:str, body:str):
    with open(template_json, 'r') as file:
        data = json.load(file)

    new_id = id_current+1
    new_data = {
            "id":new_id,
            "theme":theme,
            "body":body
            }
    data.append(new_data)
    with open(template_json, 'w') as file:
        json.dump(data, file, indent=4)

#######################################
# Основная функция
#######################################
def updateTemplate():
    """Провеярем темплейты"""
    count_template = CheckJson()

    theme = get_theme()
    body = get_body()

    print(
            f"\n"
            f"{theme}\n"
            f"{body}\n"
            )
    updateJson(id_current=count_template, theme=theme, body=body)

try:
    updateTemplate()
except KeyboardInterrupt:print('\nExit')

